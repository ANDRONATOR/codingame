import java.util.*;
import java.io.*;
import java.math.*;

/**
 * Auto-generated code below aims at helping you parse
 * the standard input according to the problem statement.
 **/
class Solution {

    public static void main(String args[]) {
        Scanner in = new Scanner(System.in);
        int N = in.nextInt(); // Number of elements which make up the association table.
        int Q = in.nextInt(); // Number Q of file names to be analyzed.
        Hashtable<String, String> hashT = new Hashtable<String, String>();
        for (int i = 0; i < N; i++) {
            String EXT = in.next().toLowerCase(); // file extension
            String MT = in.next(); // MIME type.
            String EXTwithout_duplicates="";
            if(!(EXT.equals("mp3")||EXT.equals("mp4"))){
                for(int j=0;j<EXT.length();j++){
                    if(Character.isDigit(EXT.charAt(j)))break;
                    else EXTwithout_duplicates+=EXT.charAt(j);
                }
                hashT.put(EXTwithout_duplicates, MT);
            }
            else hashT.put(EXT, MT);
        }
        in.nextLine();
        for (int i = 0; i < Q; i++) {
            String FNAME = in.nextLine().toLowerCase(); // One file name per line.
            if(!FNAME.matches("^\\w+")&&FNAME.matches("\\w*[[.]+\\w+]+")&&FNAME.length()<258){
                String lastDot = FNAME.substring(FNAME.lastIndexOf(".")+1);
                if(hashT.containsKey(lastDot)){
                    System.out.println(hashT.get(lastDot));
                    continue;
                }
            }
            System.out.println("UNKNOWN");
        }
    }
}
